{"name":"The Compass Skeleton Theme for WordPress","tagline":"A theme prepared for styling via Sass and Compass","body":"# The Compass Skeleton Theme for WordPress\r\n\r\n> This theme is a skeleton. The purpose of the theme is to demonstrate how to use the WordPress API. \r\n> The files are prepared for styling in *Sass / Compass*. \r\n\r\nThis repo was made in order to get a starting point for a WordPress theme styled via *SASS* and *Compass*. \r\nIn a standard Compass project the .scss files are placed in the /sass folder. \r\nHowever WordPress needs the style.css in the root folder. The solution is to edit the *config.rb*.\r\n\r\n\r\n## config.rb - Compass Configuration\r\n\r\nThe file *config.rb* defines the whereabouts of certain directories. \r\n\r\nWordPress needs a *style.css* file in the root of the theme folder.\r\nTherefore *config.rb* should look like this:\r\n\r\n~~~~\r\nhttp_path = \"/\"\r\ncss_dir = \"\"\r\nsass_dir = \"sass\"\r\nimages_dir = \"images\"\r\njavascripts_dir = \"javascripts\"\r\n~~~~\r\n\r\n\r\n## style.css for a theme\r\n\r\nHere's a style.css sample for this WordPress theme:\r\n\r\n~~~~\r\n/*!\r\nTheme Name: SASS / Compass Skeleton\r\nTheme URI: http://multimusen.dk/\r\nAuthor: Per Thykjaer Jensen\r\nAuthor URI: http://multimusen.dk/\r\nDescription: Sass and Compass Skeleton theme.\r\nVersion: Beta\r\nLicense: GNU General Public License v2 or later\r\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\r\nTags: compass, sass, barebone, skeleton\r\nText Domain: petj_sass_compass_skeleton\r\n\r\nThis theme, like WordPress, is licensed under the GPL.\r\nUse it to make something cool, have fun, and share what you've learned with others.\r\n*/\r\n~~~~\r\n\r\nPlease note the exclamation mark after the /*!. It \r\n\r\n## style.css for a child theme\r\n\r\nAnd this is *style.css* for a child theme for the theme\r\n\r\n~~~~\r\n/*!\r\n Theme Name:   Compass Skeleton Child\r\n Theme URI:    http://multimusen.dk\r\n Description:  A skeleton theme prepared for SASS and Compass.\r\n Author:       Per Thykjaer Jensen\r\n Author URI:   http://multimusen.dk\r\n Template:     twentyfifteen\r\n Version:      0.1\r\n License:      GNU General Public License v2 or later\r\n License URI:  http://www.gnu.org/licenses/gpl-2.0.html\r\n Tags:         sass, compass, skeleton\r\n Text Domain:  compass-skeleton-child\r\n*/\r\n~~~~\r\n\r\n# The Loop\r\n\r\n* Codex: [The Loop](https://codex.wordpress.org/The_Loop)\r\n* See: [Elegant Themes](http://www.elegantthemes.com/blog/tips-tricks/the-wordpress-loop-explained-for-beginners)\r\n\r\nHere's a loop sample from the page above:\r\n\r\n~~~~\r\nif (have_posts()) :\r\n   while (have_posts()) :\r\n      the_post();\r\n         the_content();\r\n   endwhile;\r\nendif;\r\n~~~~\r\n\r\nMore elaborate loops are possible, have a look at the loops in e.g. the *twentyfifteen*, *twentyfourteen* and other themes.\r\n\r\n* [The Loop](https://codex.wordpress.org/The_Loop)\r\n* [Template Tags](https://codex.wordpress.org/Template_Tags)\r\n* [Query](https://codex.wordpress.org/Template_Tags/query_posts)\r\n\r\n\r\n## Widget Areas\r\n\r\n1. Define the widget in functions.php\r\n2. Invoke the widget in relevant file\r\n\r\n### functions.php\r\n\r\nUse something like this in functions.php:\r\n\r\n~~~~\r\n/* WIDGET AREAS */\r\n// http://codex.wordpress.org/Widgetizing_Themes\r\n\r\nfunction petj_widgets_define() {\r\n\r\n\tregister_sidebar( array(\r\n\t\t'name'          => 'petj_sidebar_widget',\r\n\t\t'id'            => 'petj_sidebar_widget',\r\n\t\t'before_widget' => '<div id=\"petjSidebarWidget\">',\r\n\t\t'after_widget'  => '</div>',\r\n\t\t'before_title'  => '<h2 class=\"petjSidebarWidget rounded\">',\r\n\t\t'after_title'   => '</h2>',\r\n\t) );\r\n\r\n}\r\nadd_action( 'widgets_init', 'petj_widgets_define' );\r\n~~~~\r\n\r\n### sidebar.php\r\n\r\nYou can have widget areas whereever you want in your theme. In this case I add the widget area in sidebar.php:\r\n\r\n~~~~\r\n<?php dynamic_sidebar( 'petj_sidebar_widget' ); ?>\r\n~~~~\r\n\r\n# The Menu\r\n\r\nThe menu is defined in functions.php and invoked in sidebar.php. You can define menu areas all over your theme. \r\n\r\n## functions.php\r\n\r\nHere the menu is registered:\r\n\r\n~~~~\r\nfunction petj_menus() {\r\n  register_nav_menus(\r\n    array(\r\n      'sidebar-menu' => __( 'Sidebar Menu' ),\r\n      'extra-menu' => __( 'Extra Menu' )\r\n    )\r\n  );\r\n}\r\nadd_action( 'init', 'petj_menus' );\r\n~~~~\r\n\r\n## sidebar.php\r\n\r\nAnd here we display the menu in the theme:\r\n\r\n~~~~\r\n<?php dynamic_sidebar( 'petj_sidebar_widget' ); ?>\r\n~~~~\r\n----\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}